* Utopian

** Summary

Utopian is a library for tracking and browsing the warnings generated by Lisp when compiling big (or small) projects. It instruments the build process and collects a report that can then be rendered into as HTML file. You can use Utopian during development, on a single machine, or ship the generated report to a different machine for rendering. Reports are rendered for easy browsing. Notably the rendering process omits warnings from Quicklisp systems.

** Usage

*** Collecting

Utopian is divided into two systems: one for collecting, and one for reporting. The system that does the collecting has no dependencies.

#+BEGIN_SRC lisp
  (asdf:load-system :utopian)
#+END_SRC

Once the Utopian collector is loaded, you can use it to load other systems, either using ASDF or (if it is available) Quicklisp.

#+BEGIN_SRC lisp
  (utopian:load-system :my-system)        ;With ASDF.
  (utopian:quickload   :my-system)        ;With Quicklisp.
#+END_SRC

Note that, while Utopian can take advantage of Quicklisp if it is loaded, Quicklisp is not a requirement.

Whichever you use – ~utopian:load-system~ or ~utopian:quickload~ – the return value is the location of a temporary file containing the report in a standard format. At the moment, this is an s-expression format, but the on-disk format should be considered opaque.

*** Rendering

First, load the Utopian reporter:

#+BEGIN_SRC lisp
  (asdf:load-system :utopian/render)
#+END_SRC

If you are collecting and reporting on the same machine, generating a report is easy.

#+BEGIN_SRC lisp
  (utopian:generate-html-report :my-system)
#+END_SRC

If you have a pre-existing report you want to render, pass a pathname instead of a system name:

#+BEGIN_SRC lisp
  (utopian:generate-html-report #p"~/MY-SYSTEM")
#+END_SRC

(Note that the pathname must be a pathname: a string designates a system.)

Calling ~generate-html-report~ returns the pathname of the generated report. You can skip having to open the file yourself by using ~browse-report~ instead.

#+BEGIN_SRC lisp
  (utopian:browse-report :my-system)
#+END_SRC

This uses [[https://github.com/eudoxia0/trivial-open-browser][~trivial-open-browser~]] to open the report directly.

**** Filtering the report

You can filter (or not filter) the report in several ways.

#+BEGIN_SRC lisp
  ;; A list of types of warnings to ignore.
  (utopian:generate-html-report :my-system :ignore-types '(some-boring-type some-other-boring-type))
  ;; A list of systems to ignore warnings from.
  (utopian:generate-html-report :my-system :ignore-systems '(:querulous-system))
  ;; A list of regexes to ignore.
  (utopian:generate-html-report :my-system :ignore-regexes '("^Computing just-done stamp" "CXML"))
  ;; Show warnings from Quicklisp systems.
  (utopian:generate-html-report :my-system :ignore-quicklisp-systems nil)
#+END_SRC

** About the name

Utopian moves us closer to the Utopian ideal of a build without warnings.
